name: SSS develop CI/CD
on:
  push:
    branches:
      - ft/git-actions

jobs:
  deploy:
    #테스트
    runs-on: ubuntu-latest
    steps:
      - name: 저장소 Checkout
        uses: actions/checkout@v3
        
      - name: JDK 17 셋팅
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set Yaml # 환경변수 설정
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-prd.yml
        env:
          spring.datasource.url: ${{ secrets.DB_URL }}
          spring.datasource.username: ${{ secrets.DB_USER_NAME }}
          spring.datasource.password: ${{ secrets.DB_USER_PASSWORD }}

      - name: gradlew 권한 설정
        run: chmod +x gradlew

      - name: 스프링부트 애플리케이션 빌드 # (1)
        run: ./gradlew build

      - name: 도커 이미지 빌드 # (2)
        run: docker build --build-arg ENVIRONMENT=prd -t ${{ secrets.HOME_USERNAME }}/sss-dev .
      - name: Docker Hub 로그인 # (3)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Hub 퍼블리시 # (4)
        run: docker push ${{ secrets.HOME_USERNAME }}/sss-dev
      - name: WAS 인스턴스 접속 및 애플리케이션 실행 # (5)
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.HOME_HOST }}
          username: ${{ secrets.HOME_USERNAME }}
          password: ${{ secrets.HOME_PASSWORD }}
          port: ${{ secrets.HOME_SSH_PORT }}
          script: |
            docker stop sss-dev
            docker rm sss-dev 
            docker rmi ${{ secrets.HOME_USERNAME }}/sss-dev:latest
            docker pull ${{ secrets.HOME_USERNAME }}/sss-dev
            docker run -d -p ${{ secrets.SPRING_PORT }}:${{ secrets.SPRING_PORT }} --name sss-dev ${{ secrets.HOME_USERNAME }}/sss-dev